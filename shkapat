#!/bin/bash
# Copyright 2011-2012 Fatih Bostancı <faopera@gmail.com>
#v1.3


SARI="\033[1;33m"
YESiL="\033[1;32m"
SON="\033[0m"

[[ $UID -eq 0 ]] && {
  printf "${SARI}shkapat yönetici haklarıyla çalışmayı reddetmektedir..$SON\n" >&2
  exit 1
}

[[ -e /tmp/.shkapat_pid ]] && {
  [[ $(ps -p $( < /tmp/.shkapat_pid) -o comm=) = shkapat ]] && hata_ver=0 || pgrep -o shkapat > /tmp/.shkapat_pid
} || pgrep -o shkapat > /tmp/.shkapat_pid

function bilg_kapat() {
  dbus-send --system --print-reply --dest=org.freedesktop.ConsoleKit \
    /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.$1
}


function kapat_penceresi() {
  (
    for ((c=5; c<=100; c+=5))
    {
       echo -e "\a" &>/dev/null
       echo -e "$c"; sleep 1
    }
  ) | yad  --progress --percentage=5 --title=shkapat --text "20 saniye sonra bilgisayar kapatılacak" --auto-close
  (( $? == 1 )) &&  exit 1 || bilg_kapat Stop
    }

[[ $# -ne 0 ]] && {
  [ ${hata_ver:-1} -eq 0 ] && { printf "${SARI}Başka bir shkapat betiği zaten çalışıyor..$SON" >&2; exit 1; }

GIRDI=$(getopt -n ${name} -o 'd:s:ky' -l "dakika:,saat:,kapat,ybaslat,ybaşlat" "h" "$@")
      (( $? == 1 )) && exit 1

eval set -- "$GIRDI"

while true
do
  case $1 in
    -k|--kapat)
      shift 2
      kdeger=$(echo $@ | sed 's:h ::')
      [[ -n $2 ]] && { echo -e $SARI"söz dizimi hatası '$YESiL${kdeger}$SARI' "; exit 1; }
      kbekleme=0; break ;;
    -y|--yba[sş]lat)
      shift 2
      kdeger=$(echo $@ | sed 's:h ::')
      [[ -n $2 ]] && { echo -e $SARI"söz dizimi hatası '$YESiL${kdeger}$SARI' "; exit 1; }
      ybekleme=0; break ;;
    -d|--dakika)
      [[ -n $(echo $2 | tr -d [0-9]) ]] && { echo -e $SARI"hatalı dakika..'$YESiL$2$SARI' "$SON; exit 1; } || dbekleme="$2"m
      echo -e $YESiL"Bilgisayarınız $SARI`echo $dbekleme | sed 's:m::'`$YESiL dakika sonra kapanacak.. "$SON
           shift ;;
           -s|--saat)
           [[ -n $(echo $2 | tr -d [0-9]) || ${#2} -ne 4 ]] && { echo -e $SARI"hatalı saat..'$YESiL$2$SARI' "$SON; exit 1; } || { sbekleme=$2; }
           echo -e $YESiL"Bilgisayarınızın kapanma saati: $SARI`echo $sbekleme | sed 's:[0-9][0-9]:&\::'`"$SON
           shift ;;

           --)
          shift
          break ;;
        esac
      shift
    done
} || {

[ ${hata_ver:-1} -eq 0 ] && { zenity --warning --text "Başka bir ${name} betiği zaten çalışıyor.." --timeout 5;  exit 1; }

arayuz=`zenity --title "${name} seçenekleri" --width 400 --height 250 --text "<big>Seçiminizi yapın.</big>" \
        --column " #" --hide-column=2 --column " " --column "   Seçenekler" --list --radiolist \
        TRUE "1" "Bilgisayarı yeniden başlat" \
        FALSE "2" "Bilgisayarı şimdi kapat" \
        FALSE "3" "Bilgisayarı belirtilecek dakika sonra kapat" \
        FALSE "4" "Bilgisayarı belirtilecek saatte kapat"`
        [ $? -eq 1 ] && exit 1

    case $arayuz in
      1)
      ybekleme=0
      ;;
      2)
      kbekleme=0
      ;;
      3)
      dbekleme=`zenity --scale --text "Sistemin kaç dakika sonra kapatılacağını belirleyin (5-600 arası)" --title "${name}" \
                --min-value=5 --max-value=600 --value=5 --step=1`
                [ $? -eq 1 ] && exit 1

      dbekleme="$dbekleme"m
      zenity --info --text "      Bilgisayarınız\n\n             <big>`echo $dbekleme | sed 's:m::'`</big>\ndakika sonra kapanacak." \
      --title "${name}" --timeout 5 & 
      ;;
      4)
      sbekleme=`zenity --entry --text "Kapanma saatini girin (ör: 9:30 için 0930)" --title "${name} kapanış saati"`
                [ $? -eq 1 ] && exit 1

      [[ -n $(echo $sbekleme | tr -d [0-9]) || ${#sbekleme} -ne 4 ]] && {

      zenity --warning --text "hatalı saat..\! \n'$sbekleme' " --title "${name}" --timeout 5; exit 1; } || {
      zenity --info --text "Bilgisayarınızın kapanma saati \n\n<big>            `echo $sbekleme | sed 's:[0-9][0-9]:&\::'`</big>" \
      --title "${name}" --timeout 9 & }
      ;;
    esac

}

[ ${kbekleme:-1} -eq 0 ] && bilg_kapat
[ ${ybekleme:-1} -eq 0 ] && yeniden_baslat
[[ -n $dbekleme ]] && { sleep $dbekleme; kapat_penceresi; }
[[ -n $sbekleme ]] && {
[ $sbekleme -eq $(date +%H%M) ] && kapat_penceresi

simdi=`expr $(date +%H) \* 3600 \+ $(date +%M) \* 60 \+ $(date +%S)`

export $(echo $sbekleme | sed 's:[0-9][0-9]:&\ :' | gawk '{print "saat2="$1, "\ndakika2="$2}')

sbekleme=`expr $saat2 \* 3600 \+ $dakika2 \* 60` 

[ $sbekleme -ge $simdi ] && {

bekleme_suresi=`expr $sbekleme \- $simdi` ; } || {
bekleme_suresi=`expr 24 \* 3600 \- $simdi \+ $sbekleme`; }

sleep $bekleme_suresi; kapat_penceresi
}
