# Copyright (c) 2012-2017 Fatih Bostancı <faopera@gmail.com>
# GPLv3
# v1.3


dond() {
  local dizin="$1" ad=${FUNCNAME[0]} dz d

  (( ${#DOND_DIZINLERI[@]} ))  && {
    declare -n dizin_dizisi=DOND_DIZINLERI
    if ! [[ " ${dizin_dizisi[@]} " == *" $HOME "* ]]
    then
        dizin_dizisi=("$HOME" "${dizin_dizisi[@]}" )
    fi
  }

  (( ! ${#dizin_dizisi[@]} )) && dizin_dizisi+=( "$HOME" )
  [[ ${dizin} = @(.|-) ]] && dizin="$(pwd)"

  if [[ -d ${dizin} ]]
  then
      for dz in ${dizin_dizisi[@]}
      do
        if [[ ${dz} = ${dizin} ]]
        then
            printf '%s: %s daha önceden eklenmiş.\n' "${ad}" "${dizin}"
            return 1
        fi
      done
      dizin_dizisi+=( "${dizin}" )
      printf '%s: %s eklendi.\nToplam eklenmiş dizin: %d\n' "${ad}" "${dizin}" "$(( ${#dizin_dizisi[@]} - 1 ))"

  elif [[ ${dizin} = -@(-listele|l) ]]
  then
      for ((d=1; d<${#dizin_dizisi[@]}; d++))
      do
        printf '%d-> %s\n' "$d" "${dizin_dizisi[$d]}"
      done

  elif [[ ${dizin} = -@(-s[iı]f[iı]rla|s) ]]
  then
      unset dizin_dizisi && printf '%s: dizin dizisi sıfırlandı.\n' "${ad}"

  elif [[ ${dizin} = -@(-[oö]nceki|[oö]) ]]
  then
      [[ -n ${onceki} ]] && cd "${onceki}" ||
        printf '%s: Önceki dizin bulunmuyor.\n' "${ad}"

  elif [[ ${dizin:-0} -lt ${#dizin_dizisi[@]} ]]
  then
      (( dizin < 0 )) && { printf "%s: Girilen dizin indisi 0'dan küçük olamaz.\n" "${ad}"; return 1; }
      [[ ${#dizin_dizisi[@]} -gt 0 ]] && {
        onceki="$(pwd)"
        cd "${dizin_dizisi[$dizin]}"
      }

  elif [[ ${dizin:-0} -ge ${#dizin_dizisi[@]} ]]
  then
      printf '%s: Girilen dizin indisi en fazla %d olabilir.\n' "${ad}" "$(( ${#dizin_dizisi[@]} - 1 ))"
  fi
}

# vim: set ts=2 sw=2 et:
