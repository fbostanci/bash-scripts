#!/bin/bash
# Copyright 2010-2012 Fatih Bostancı <faopera@gmail.com>
# GPLv3
# v1.2.1

YENIDEN_BASLAT=0
SIMDI_KAPAT=0
SAAT=0
DAKIKA=0
AD="${0##*/}"
SURUM=1.2.1

function bilgi() {
  if [[ "$1" = b ]]
  then
      printf '%s\n\n%s\n\n%s\n%s\n%s\n%s\n' \
        "${AD^} $SURUM" \
        'Copyright (c) 2010-2012 Fatih Bostancı'\
        'Bu uygulama bir özgür yazılımdır: yeniden dağıtabilirsiniz ve/veya'\
        'Özgür Yazılım Vakfı (FSF) tarafından yayımlanan (GPL)  Genel  kamu'\
        'lisansı sürüm 3  veya daha yeni bir sürümünde belirtilen  şartlara'\
        'uymak kaydıyla, üzerinde değişiklik yapabilirsiniz.'
  elif [[ "$1" = y ]]
  then
      printf '\n\n%b\n\n%s\n%s\n\n%s\n%s\n\n%s\n%s\n\n%s\n%s\n\n%s\n%s\n\n%s\n%s\n\n' \
        "${AD} [seçenek]" \
        '-k,--kapat' \
        '    Bilgisayarı hemen kapatır.' \
        '-y, --ybaslat, ybaşlat' \
        '    Bilgisayarı hemen yeniden başlatır.' \
        '-s, --saat <ss:dd>' \
        '    Girilen saatte bilgisayarı kapatır.' \
        '-d, --dakika <dakika>' \
        '    Girilen dakika sonra bilgisayarı kapatır.' \
        '-v, --version, --surum, --sürüm' \
        '    Sürüm bilgisini gösterir.' \
        '-h, --yardım, --yardim' \
        '    Bu yardım çıktısını görüntüler.'
  fi
}

function bilg_kapat() {
  dbus-send --system --print-reply --dest=org.freedesktop.ConsoleKit \
    /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.$1
}

function kapat_penceresi() {
  local gor c d=20
  if test -x "$(which kdialog 2>/dev/null)"
  then
      set -e
      gor=$(kdialog --icon=system-shutdown --title "${AD^}" --progressbar "kapatılıyor..." 5)
      qdbus $gor Set org.kde.kdialog.ProgressDialog maximum 20
      for ((c=0; c<20; c++))
      {
        printf '\a'
        qdbus $gor Set org.kde.kdialog.ProgressDialog value $c
        qdbus $gor setLabelText "$d saniye sonra sistem kapatılacak."
        ((d--)); sleep 1
      }
      qdbus $gor close; bilg_kapat Stop
  elif test -x "$(which yad 2>/dev/null)"
  then
      (
        for ((c=5; c<=100; c+=5))
        {
           printf '%d\n' "$c"; sleep 1
        }
      ) | yad --progress --percentage=5 --title="${AD^}" \
            --text "20 saniye sonra bilgisayar kapatılacak" --auto-close \
            --window-icon=gnome-shutdown --sticky --center \
            --button='Şimdi kapat:0' --button='İptal:1'
          (( $? == 1 )) &&  exit 1 || bilg_kapat Stop
  elif test -x "$(which zenity 2>/dev/null)"
  then
      (
        for ((c=5; c<=100; c+=5))
        {
           printf '%d\n' "$c"; sleep 1
        }
      ) | zenity --progress --percentage=5 --title="${AD^}" \
            --text "20 saniye sonra bilgisayar kapatılacak" --auto-close
          (( $? == 1 )) &&  exit 1 || bilg_kapat Stop
  else
        for ((c=20; c>0; c--))
        {
           printf "\a%2d%s\r" "$c" \
             " saniye sonra bilgisayar kapatılacak."
           sleep 1
        }
        bilg_kapat Stop
  fi
}

DES=$(getopt -n "${AD}" -o 's:d:ykhv' -l \
      'saat:,dakika:,ybaşlat,ybaslat,kapat,help,yardım,yardim,surum,sürüm,version' -- "$@")
(( $? == 1 )) && exit 1

eval set -- "$DES"

while true
do
  case $1 in
    -s|--saat)
      SAAT=1
      shift; girilen_saat="$1" ;;
    -d|--dakika)
      DAKIKA=1
      shift; girilen_dakika="$1" ;;
    -y|--yba[şs]lat)
      YENIDEN_BASLAT=1 ;;
    -k|--kapat)
      SIMDI_KAPAT=1 ;;
    -v|--s[uü]r[uü]m)
      bilgi b
      exit 0 ;;
    -h|--yard[ıi]m)
      bilgi y
      exit 0 ;;
    --)
      shift
      break ;;
  esac
  shift
done

(( YENIDEN_BASLAT )) && {
  for ((i=3; i>0; i--))
  {
    printf "%s\a\t" "$i"
    sleep 1
  }
  printf '\n\n%s\a\n' 'Yeniden başlatılıyor...'
  bilg_kapat Restart
}

(( SIMDI_KAPAT )) && {
  for ((i=3; i>0; i--))
  {
    printf "%s\a\t" "$i"
    sleep 1
  }
  printf '\n\n%s\a\n' 'Kapatılıyor...'
  bilg_kapat Stop
}

(( DAKIKA )) && {
  [[ -n $(tr -d 0-9 <<<$girilen_dakika) ]] && {
    printf "%s: hatalı dakika: \`%s'\n" "$AD" "$girilen_dakika"
    exit 1
  }
  bekle=$((girilen_dakika * 60))
  printf "%s: bilgisayarınız %d dakika sonra kapatılacak.\n" "${AD}" "$girilen_dakika"
  (( (bekle - 20) >= 0 )) && bekle=$((bekle-20))
  sleep $bekle; kapat_penceresi
}

(( SAAT )) && {
  [[ $girilen_saat != @([0-2][0-9]:[0-5][0-9]) ]] && {
    printf '%s: %s\n%s\n' "$AD" \
      "girilen saat ya da saat biçimi hatalı." \
      "Saati ss:dd biçiminde giriniz"
    exit 1
  }

  saat=$(cut -d':' -f1 <<<$girilen_saat)
  dakika=$(cut -d':' -f2 <<<$girilen_saat)
  saat=$(sed 's:^[0]*::' <<<$saat)
  dakika=$(sed 's:^[0]*::' <<<$dakika)

  [[ $saat -gt 23 ]] && { printf "%s: girilen saat 23'ten büyük olamaz.\n" "$AD" >&2; exit 1; }
  [[ $saat$dakika -ge $(date +%-H%-M) ]] && bekle=$(($(date -d "$girilen_saat" +%s) - $(date +%s))) || \
    bekle=$((86400 - $(date +%s) + $(date -d "$girilen_saat" +%s)))

  (( (bekle-20) >= 0 )) && bekle=$((bekle-20))
  printf '%s: bilgisayarınızın kapatılacağı saat: %s\n' "${AD}" "$girilen_saat"
  sleep $bekle; kapat_penceresi
}